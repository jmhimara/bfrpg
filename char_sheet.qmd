```{=html}

<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"> -->

<script>
var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
  return new bootstrap.Popover(popoverTriggerEl)
})

document.addEventListener("DOMContentLoaded", function () {
  var navLinks = document.getElementsByClassName("nav-link");
  for (let i = 0; i < navLinks.length; i++) {
    navLinks[i].addEventListener("click", function() {
        navLinks[i].scrollIntoView();
    });
  }
}, false);




</script>



 <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>


 <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
 
<style>
body {
  font-family: 'Caudex'!important;
}
</style>   
```


# Character Sheet

Upload Character Sheet:

```{ojs}
viewof recordsFile = Inputs.file({accept: ".json"})

```


```{ojs}
char = {
if (recordsFile != null){
    const data = recordsFile.json()
    
    return data
}}

```

{{< include char_sheet-loadFile.qmd >}}

<br>

:::{.column-screen-inset}

```{=html}

  <h2>Character Details</h3>
    <br>
    
    <div class="grid align-items-center mx-1 justify-content-between" style="--bs-gap:0.5rem">

      <div class=" g-col-12 g-col-md-7 ">

          <div class="mb-5">
            <input id="Name" type="text" placeholder="Character Name" autocomplete="off" >
          </div>
          <div>
            <dl class="field">
              <div id="charClass"> 
                  <dt>Class</dt> 
                  <dd contenteditable="true">
                  </dd> 
              </div>
              <div id="charRace">
                  <dt>Race</dt>
                  <dd contenteditable="true"></dd>
              </div>
          
              <div id="charLevel">
                  <dt>Level</dt>
                  <dd contenteditable="true"></dd>
              </div>
          
              <div id="charExperience">
                  <dt>Experience</dt>
                  <dd contenteditable="true"></dd>
              </div>
          </div>
      </div>
    
    <div class=" g-col-12 g-col-md-5   my-2" style="--bs-gap: 1rem;">
    <div class="grid my-2  align-items-center border border-dark rounded shadow ps-1">
      <div class="g-col-12 g-col-md-8">
        <div class="health" id="HP">
            <label for="hp1">HP</label>
            <input type="text" id="hp1" class="hp text-center" autocomplete="off">
            <strong style="font-size:2rem; margin-top:10px;">/</strong>
            <input type="text" id="hp2" class="hp text-center" autocomplete="off">
        </div>
      </div>
      <div class="g-col-12 g-col-sm-4">
        <div class="health" id="Armor">
            <label for="ACinput">AC</label>
            <input type="text" id="ACinput" class="text-center" autocomplete="off">
        </div>
      </div>
      <div class="g-col-12 g-col-md-6">
        <div class="health" id="HD" style="margin-top:10px;">
            <label for="HDinput">HD</label>
            <input type="text" id="HDinput" autocomplete="off">
    
        </div>
      </div>
    </div> <!-- row -->
    
    </div><!-- col -->
    </div><!-- row -->
    <hr>
    <!-- Other Char details -->


    <dl class="field">
    
        <div class="g-row" id="BAB" style="">
            <dt>Base Attack Bonus</dt>
            <dd contenteditable="true" class="small" id="BABbox"></dd> 
        </div>
    
        <div  class="g-row"id="Movement">
            <dt>Movement</dt>
            <dd contenteditable="true" class="small" id="MovementBox"></dd> 
        </div>
    
        <div class="g-row" id="Initiative">
            <dt>Initiative</dt>
            <dd contenteditable="true" class="small" id="InitiativeBox"></dd> 
        </div>
    
    </dl>
```

{{< include char_sheet-dice.qmd >}}

```{=html}


<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="attributes-tab" data-bs-toggle="tab" data-bs-target="#attributes" type="button" role="tab" aria-controls="attributes" aria-selected="true">Attributes</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="combat-tab" data-bs-toggle="tab" data-bs-target="#combat" type="button" role="tab" aria-controls="combat" aria-selected="false">Combat</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="Spells-tab" data-bs-toggle="tab" data-bs-target="#spells" type="button" role="tab" aria-controls="spells" aria-selected="false">Spells</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="equipment-tab" data-bs-toggle="tab" data-bs-target="#equipment" type="button" role="tab" aria-controls="equipment" aria-selected="false">Equipment</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="notes-tab" data-bs-toggle="tab" data-bs-target="#notes" type="button" role="tab" aria-controls="notes" aria-selected="false">Notes</button>
  </li>
</ul>

<div class="tab-content" id="nav-tabContent">


<!-- ------------------------------------------------------- 
--------------------------------- -------------------------->

    <div class="tab-pane show active" id="attributes" role="tabpanel" aria-labelledby="attributes-tab">
<!-- Saves and Abilities -->
    <div class="grid mx-2 my-2" >
      <div class="g-col-12 g-col-md-6">
          <h2>Abilities</h2>


          <div class="attributes">
      
          <div id="Strength">
              <label for="strNum">Str</label>
              <input type="number" id="strNum" value="10" min="3" max="25" autocomplete="off"> 
              <span id=strMod>()</span>
          </div>
      
          <div id="Dexterity">
              <label for="dexNum">Dex</label>
              <input autocomplete="off" type="number" id="dexNum" value="10" min="3" max="25"> <span id=dexMod>()</span>
          </div>
      
          <div id="Constitution">
              <label for="conNum">Con</label>
              <input  autocomplete="off"type="number" id="conNum" value="10" min="3" max="25"> <span id=conMod>()</span>
          </div>
      
          <div id="Intelligence">
              <label for="intNum">Int</label>
              <input  autocomplete="off" type="number" id="intNum" value="10" min="3" max="25"> <span id=intMod>()</span>
          </div>
      
          <div id="Wisdom">
              <label for="wisNum">Wis</label>
              <input autocomplete="off" type="number" id="wisNum" value="10" min="3" max="25"> <span id=wisMod>()</span>
          </div>
      
          <div id="Charisma">
              <label for="chaNum">Cha</label>
              <input autocomplete="off" type="number" id="chaNum" value="10" min="3" max="25"> <span id=chaMod>()</span>
          </div>
          </div>
      </div>
      <div class="g-col-12 g-col-md-6">
          <h2>Saving Throws</h2>
          <div class="saves" >
          <div id="DRP">
              <input  autocomplete="off" type="text" id="save-drpBox">
              <label for="save-drpBox">Death Ray, Poison</label>
          </div>
          <div id="Wand">
              <input autocomplete="off" type="text" id="save-wandBox">
              <label for="save-wandBox">Magic Wands</label>
          </div>
          <div id="Par">
              <input autocomplete="off" type="text" id="save-parBox" >
              <label for="save-parBox">Paralysis / Petrification</label>
          </div>
          <div id="DragonBreath">
              <input autocomplete="off" type="text" id="save-dbBox">
              <label for="save-dbBox">Dragon Breath</label>
          </div>
          <div id="Spells">
              <input autocomplete="off" type="text" id="save-spellBox" >
              <label for="save-spellBox">Spells</label>
          </div>
          </div>
      </div>
    </div> <!-- big grid -->

    <!-- Languages and skills  -->
    <div class="grid mx-2 my-2" >

        <div class="g-col-12 g-col-md-4">
            <h2>Thieving Skills</h2>
             <div class="container mt-4 ">
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Open Locks</span>
                    </div>
                    <input autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefLocksInput">
                    <button class="btn btn-primary" type="button" id="thiefLocksButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fs-5 fw-bold" style="min-width:2rem;" id="thiefLocksOut"></div>
                </div>
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Remove Traps</span>
                    </div>
                    <input  autocomplete="off" type="text" class="form-control rounded-start  fw-bold" style="max-width:4rem;" id="thiefTrapInput">
                    <button class="btn btn-primary" type="button" id="thiefTrapButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefTrapOut"></div>
                </div>
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text ">Pick Pockets</span>
                    </div>
                    <input autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefPocketsInput">
                    <button class="btn btn-primary" type="button" id="thiefPocketsButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefPocketsOut"></div>
                </div>
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text ">Move Silently</span>
                    </div>
                    <input autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefSilentInput">
                    <button class="btn btn-primary" type="button" id="thiefSilentButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefSilentOut"></div>
                </div>  
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text ">Climb Walls</span>
                    </div>
                    <input  autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefClimbInput">
                    <button class="btn btn-primary fs-5" type="button" id="thiefClimbButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefClimbOut"></div>
                </div>
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text ">Hide</span>
                    </div>
                    <input autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefHideInput">
                    <button class="btn btn-primary" type="button" id="thiefHideButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefHideOut"></div>
                </div>      
                <div class="input-group mb-3 justify-content-end">
                    <div class="input-group-prepend">
                        <span class="input-group-text ">Listen</span>
                    </div>
                    <input autocomplete="off" type="text" class="form-control rounded-start fw-bold" style="max-width:4rem;" id="thiefListenInput">
                    <button class="btn btn-primary " type="button" id="thiefListenButton"><i class="bi bi-dice-5"></i></button>
                    <div class="output-thief p-2 fw-bold" style="min-width:2rem;" id="thiefListenOut"></div>
                </div>                                                 


            </div> <!-- thieving container` -->


        </div> <!-- Column -->


        <div class="g-col-12 g-col-md-4">
            <h2>Languages</h2>
             <div class="container mt-4 me-5">
                <div id="inputContainer" class="mb-3">
                <div class="input-group mb-2 rounded">
                    <input autocomplete="off" type="text" class="form-control rounded lang" placeholder="Language 1" id="language1">
                </div>
                </div>
                <button id="addInputButton" class="btn btn-primary rounded">Add Language</button>
            </div>

        </div>
        
        <div class="g-col-12 g-col-md-4">
            <h2>Other Skills / Feats</h2>
             <div class="container mt-4 me-5">
                <div id="inputContainerSkills" class="mb-3">
                <div class="input-group mb-2 rounded">
                    <input autocomplete="off" type="text" class="form-control rounded oskill" id="skill1" placeholder="Skill 1" >
                </div>
                </div>
                <button id="addSkillButton" class="btn btn-primary rounded">Add Skill</button>
            </div>
        </div>

    </div> <!-- languages and skills -->
    </div> <!-- attributes tab -->  

<!-- ------------------------------------------------------- 
--------------------------------- -------------------------->

    <div class="tab-pane" id="combat" role="tabpanel" aria-labelledby="combat-tab">
    <h2>Attacks</h2>
```

{{< include char_sheet-combat.qmd >}}

```{=html}

    <div class="tab-pane" id="spells" role="tabpanel" aria-labelledby="spells-tab">

```

{{< include char_sheet-spells.qmd >}}

```{=html}

    </div> <!-- spells -->

<!-- ------------------------------------------------------- 
--------------------------------- -------------------------->

    <div class="tab-pane" id="equipment" role="tabpanel" aria-labelledby="equipment-tab">

```

{{< include char_sheet-equip.qmd >}}

```{=html}

    </div> <!-- equipment -->

<!-- ------------------------------------------------------- 
--------------------------------- -------------------------->

    <div class="tab-pane" id="notes" role="tabpanel" aria-labelledby="notes-tab">

```

{{< include char_sheet-notes.qmd >}}

```{=html}

    </div> <!-- notes -->

</div> <!-- tab contents -->

```

```{=html}
<style>
      .attributes input[type="number"] {
        display: inline-block;
        margin-right: 1rem;
        width: 3.5rem;
        border: 1px dotted #bbb;
        border-radius: .4rem;
        padding: 0;
        margin-bottom:7px;
        font-size: 1.3rem;
        text-align: center;
      
      }
      
      div.saves input[type="text"] {
        display: inline-block;
        margin-right: 1rem;
        margin-bottom: 1rem;
        width: 3.5rem;
        border: 1px dotted #bbb;
        border-radius: .4rem;
        padding: 0;
        font-size: 1.3rem;
        text-align: center;
      
      }
      
      div.saves {
          font-size:1.5rem;
      }
      
      div.attributes {
          font-size:1.5rem;
      }
      
      label{
          text-align: right;
      }
      
      div.attributes label {
          padding-right:10px;
          display: inline-block;
          width: 100px;
          padding-right: 20px;
      }
      
      div.saves label {
          padding-right:10px;
          display: inline-block;
      
          padding-right: 20px;
      }
      
      .hp{
          height: 40px;
          min-width: 10px;
          
          padding-top: 5px;
          font-size: 20px;
          font-weight: 1000;
          text-align: left;
          margin:0;
          padding-left:0;
          padding-right:0;
      }
      #hp1{
          background-image: url("./images/heart-broken.png");
          background-repeat: no-repeat;
          background-position: center;
          background-size: 40px; 
      }
      #hp2{
          background-image: url("./images/heart1.png");
          background-repeat: no-repeat;
          background-position: center;
          background-size: 37px; 
      }
      
      #Armor input{
          background-image: url("./images/shield.png");
          background-repeat: no-repeat;
          background-position: center;
          background-size: cover;
          height: 50px;
          width: 50px;
          text-align: center;
          padding: 0px;
          font-size: 20px;
          font-weight: 700;
      }
      
      
      div.health label {
          display: inline-block;
          font-weight: 800;
          flex: 1 1 auto;
          text-align: left;
          padding-right: 0px;
          padding-bottom: 1.5rem;
          margin-right: 0px;
      }

      div.health input {
        display: inline-block;
        margin: 0 0 0 2rem;
        margin-right: 0px;
        flex: 2 1 auto;
        border: 1px dotted #bbb;
        border-radius: 4px;
        width: 2.6rem;
        padding-left: 0px;
        margin-left: 0px;
        min-height: 30px;
        font-size: 1.1rem;
      }
      #HDinput {
        width:4.55rem !important; 
      }
      
      dl {
          list-style:none;
      }
      dl.field{
          margin: 0;
          display: flex;
          flex-direction: row;
          justify-content: flex-start;
          align-items: left;
          flex-wrap: wrap;
          max-width: 1200px;
          font-size:1.1rem;
          }
      dl.field dt {
          display: inline-block;
          font-weight: 500;
          flex: 1 1 auto;
          text-align: left;
          padding-left: 1rem;
          padding-right: 0px;
          padding-bottom: 1.5rem;
          margin-right: 0px;
      }
      
      /* Inserting this collapsed row between two flex items will make 
       * the flex item that comes after it break to a new row */
      .break {
        flex-basis: 100%;
        height: 0;
      }
      
      dl.field dd {
        display: inline-block;
        margin: 0 0 0 2rem;
        margin-right: 0px;
        flex: 2 1 auto;
        border: 1px dotted #bbb;
        border-radius: 4px;
        min-width: 7rem;
        padding-left: 10px;
        margin-left: 10px;
        min-height: 30px;
        font-size: 1.1rem;
      }
      dl.field dd.small {
          min-width: 3.5rem;
          height: 3rem;
          align-items: center;
          text-align: center;
          margin:0;
          padding:0;
          padding-top:0.7rem;
          font-size:1.2rem;
          font-weight: 700;
      }

        #BABbox {
            background-image:url('./images/sword.svg');
            background-repeat: no-repeat;
            background-size: cover;
        }
        #MovementBox {
            background-image:url('./images/run-person.svg');
            background-repeat: no-repeat;
            background-size: cover;
        }
        #InitiativeBox {
            background-image:url('./images/thunder.svg');
            background-repeat: no-repeat;
            background-size: cover;
        }

      #Name{
          width:95%;
          max-width: 1500px;
          padding-left: 10px;
          margin-left: 10px;
          border: 1px dotted #bbb;
          border-radius: 4px;
          font-size:1.5em;
      
      }
      
      ::placeholder{
          opacity: 0.4;
      }
      
</style>

```

:::




```{ojs}
import { calculateModifier, generalDice } from "./custom.js"
d3 = require('d3@7')

numberInputStr = d3.select("#strNum");
numberInputDex = d3.select("#dexNum");
numberInputCon = d3.select("#conNum");
numberInputInt = d3.select("#intNum");
numberInputWis = d3.select("#wisNum");
numberInputCha = d3.select("#chaNum");

outputStr = d3.select("#strMod");
outputDex = d3.select("#dexMod");
outputCon = d3.select("#conMod");
outputInt = d3.select("#intMod");
outputWis = d3.select("#wisMod");
outputCha = d3.select("#chaMod");


function updateOutput(inp, out) {
    const inputValue = inp.property("value");
    out.text(`( ${calculateModifier((Number(inputValue)))} )`);
}

b = {
outputStr.text(`( ${calculateModifier(Number(numberInputStr.property("value")))} )`)
outputDex.text(`( ${calculateModifier(Number(numberInputDex.property("value")))} )`)
outputCon.text(`( ${calculateModifier(Number(numberInputCon.property("value")))} )`)
outputInt.text(`( ${calculateModifier(Number(numberInputInt.property("value")))} )`)
outputWis.text(`( ${calculateModifier(Number(numberInputWis.property("value")))} )`)
outputCha.text(`( ${calculateModifier(Number(numberInputCha.property("value")))} )`)
}


a = {
numberInputStr.on("input", () => updateOutput(numberInputStr,outputStr));
numberInputDex.on("input", () => updateOutput(numberInputDex,outputDex));
numberInputCon.on("input", () => updateOutput(numberInputCon,outputCon));
numberInputInt.on("input", () => updateOutput(numberInputInt,outputInt));
numberInputWis.on("input", () => updateOutput(numberInputWis,outputWis));
numberInputCha.on("input", () => updateOutput(numberInputCha,outputCha));
}



function addInputField() {
      var inputContainer = d3.select('#inputContainer');
      var inputCount = inputContainer.selectAll('.input-group').size();

      var inputGroup = inputContainer
        .append('div')
        .attr('class', 'input-group mb-2');

      inputGroup
        .append('input')
        .attr('type', 'text')
        .attr('autocomplete',"off")
        .attr('id', 'language' + (inputCount + 1))
        .attr('class', 'form-control rounded-start lang')
        .attr('placeholder', 'Language ' + (inputCount + 1));

      inputGroup
        .append('button')
        .attr('class', 'btn btn-danger delete-button rounded-end')
        .attr('type', 'button')
        .attr('id', 'languageDel' + (inputCount + 1))
        .text('-')
        .on('click', function() {
          inputGroup.remove();
        });
    }
c = {
      var addInputButton = d3.select('#addInputButton');
      addInputButton.on('click', () => addInputField() );
}


function addSkill() {
      var inputContainer = d3.select('#inputContainerSkills');
      var inputCount = inputContainer.selectAll('.input-group').size();

      var inputGroup = inputContainer
        .append('div')
        .attr('class', 'input-group mb-2');

      inputGroup
        .append('input')
        .attr('autocomplete',"off")
        .attr('type', 'text')
        .attr('id', 'skill' + (inputCount + 1))
        .attr('class', 'form-control rounded-start oskill')
        .attr('placeholder', 'Skill ' + (inputCount + 1));

      inputGroup
        .append('button')
        .attr('class', 'btn btn-danger delete-button rounded-end')
        .attr('type', 'button')
        .attr('id', 'skillDel' + (inputCount + 1))
        .text('-')
        .on('click', function() {
          inputGroup.remove();
        });
    }
d = {
      var addInputButton = d3.select('#addSkillButton');
      addInputButton.on('click', () => addSkill() );

}

openLocks = {
    var but = d3.select('#thiefLocksButton');
    var out = d3.select('#thiefLocksOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

traps = {
    var but = d3.select('#thiefTrapButton');
    var out = d3.select('#thiefTrapOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

pocket = {
    var but = d3.select('#thiefPocketsButton');
    var out = d3.select('#thiefPocketsOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

silently = {
    var but = d3.select('#thiefSilentButton');
    var out = d3.select('#thiefSilentOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

climb = {
    var but = d3.select('#thiefClimbButton');
    var out = d3.select('#thiefClimbOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

hide = {
    var but = d3.select('#thiefHideButton');
    var out = d3.select('#thiefHideOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}

listen = {
    var but = d3.select('#thiefListenButton');
    var out = d3.select('#thiefListenOut');

    but.on('click', () => {
        var temp = generalDice(1,100,0);
        out.text(temp)
    });
}
```

{{< include char_sheet-saveFile.qmd >}}

```{=html}

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.4/d3.js" integrity="sha512-51xEUbZobtzTG53DuETlzoOZk9cWBiEXV/5Mh7m1htisZLZS4pIHP29J/61/t47rL5Yo0ZCzaeaKLabxdurSJg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

  <div class="container">
    <button id="downloadCharButton" class="btn btn-primary">Download Character</button>
  </div>
```

```{ojs}
dchar = {
d3.select("#downloadCharButton").on("click", downloadJson);
}
// savetoFile()
```